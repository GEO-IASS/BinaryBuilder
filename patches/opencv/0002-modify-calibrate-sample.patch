--- opencv-2.4.11/samples/cpp/calibration.cpp	2015-02-25 04:10:31.000000000 -0800
+++ opencv-2.4.11/samples/cpp/calibration_new.cpp	2016-01-18 14:36:36.967476787 -0800
@@ -7,6 +7,7 @@
 #include <stdio.h>
 #include <string.h>
 #include <time.h>
+#include <iostream>
 
 using namespace cv;
 using namespace std;
@@ -62,6 +63,7 @@
         "     [-zt]                    # assume zero tangential distortion\n"
         "     [-a <aspectRatio>]      # fix aspect ratio (fx/fy)\n"
         "     [-p]                     # fix the principal point at the center\n"
+        "     [-i]                     # Display square detection results\n"
         "     [-v]                     # flip the captured images around the horizontal axis\n"
         "     [-V]                     # use a video file, and not an image list, uses\n"
         "                              # [input_data] string for the video file name\n"
@@ -143,7 +145,8 @@
     if( flags & CV_CALIB_FIX_ASPECT_RATIO )
         cameraMatrix.at<double>(0,0) = aspectRatio;
 
-    distCoeffs = Mat::zeros(8, 1, CV_64F);
+    const int NUM_DISTORTION_COEFFS = 4; // k1, k2, p1, p2 is most common.
+    distCoeffs = Mat::zeros(NUM_DISTORTION_COEFFS, 1, CV_64F);
 
     vector<vector<Point3f> > objectPoints(1);
     calcChessboardCorners(boardSize, squareSize, objectPoints[0], patternType);
@@ -151,7 +154,7 @@
     objectPoints.resize(imagePoints.size(),objectPoints[0]);
 
     double rms = calibrateCamera(objectPoints, imagePoints, imageSize, cameraMatrix,
-                    distCoeffs, rvecs, tvecs, flags|CV_CALIB_FIX_K4|CV_CALIB_FIX_K5);
+                    distCoeffs, rvecs, tvecs, flags|CV_CALIB_FIX_K3);//|CV_CALIB_FIX_K5);
                     ///*|CV_CALIB_FIX_K3*/|CV_CALIB_FIX_K4|CV_CALIB_FIX_K5);
     printf("RMS error reported by calibrateCamera: %g\n", rms);
 
@@ -307,6 +310,7 @@
     bool flipVertical = false;
     bool showUndistorted = false;
     bool videofile = false;
+    bool popUpResults = false; // If true, pop up windows showing the detection results.
     int delay = 1000;
     clock_t prevTimestamp = 0;
     int mode = DETECTION;
@@ -387,6 +391,10 @@
         {
             flipVertical = true;
         }
+        else if( strcmp( s, "-i" ) == 0 )
+        {
+            popUpResults = true;
+        }
         else if( strcmp( s, "-V" ) == 0 )
         {
             videofile = true;
@@ -429,7 +437,8 @@
     if( capture.isOpened() )
         printf( "%s", liveCaptureHelp );
 
-    namedWindow( "Image View", 1 );
+    if ( popUpResults )
+      namedWindow( "Image View", 1 );
 
     for(i = 0;;i++)
     {
@@ -442,8 +451,16 @@
             capture >> view0;
             view0.copyTo(view);
         }
-        else if( i < (int)imageList.size() )
+        else
+        {
+          if( i < (int)imageList.size() )
+          {
             view = imread(imageList[i], 1);
+            if(!view.data)
+              return fprintf( stderr, "Failed to read image data from input file %s", 
+                              imageList[i].c_str() ), -1;
+          }
+        }
 
         if(!view.data)
         {
@@ -520,21 +537,24 @@
             Mat temp = view.clone();
             undistort(temp, view, cameraMatrix, distCoeffs);
         }
-
-        imshow("Image View", view);
-        int key = 0xff & waitKey(capture.isOpened() ? 50 : 500);
-
-        if( (key & 255) == 27 )
-            break;
-
-        if( key == 'u' && mode == CALIBRATED )
-            undistortImage = !undistortImage;
-
-        if( capture.isOpened() && key == 'g' )
+        
+        if ( popUpResults )
         {
-            mode = CAPTURING;
-            imagePoints.clear();
-        }
+          imshow("Image View", view);
+          int key = 0xff & waitKey(capture.isOpened() ? 50 : 500);
+          
+          if( (key & 255) == 27 )
+              break;
+
+          if( key == 'u' && mode == CALIBRATED )
+              undistortImage = !undistortImage;
+
+          if( capture.isOpened() && key == 'g' )
+          {
+              mode = CAPTURING;
+              imagePoints.clear();
+          }
+        } // End if ( popUpResults)
 
         if( mode == CAPTURING && imagePoints.size() >= (unsigned)nframes )
         {
